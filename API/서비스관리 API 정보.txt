[포인트 환급 목록 조회]
URL : /management/point
TYPE : POST 
Parameter : 
{
	state : "상태값" // 0: 대기 상태 (신청 내역), 1: 승인 상태 (승인 내역), 2: 취소 상태 (취소 내역)
}

응답 : 
pointList : {
	[
		{
			uniqueId : "글 번호", 
			dateTime : "신청일", 
			trademark : "아이디", 
			phone : "전화번호",
			viewPoint : "포인트", 
			bankNumber : "은행", 
			bankUser : "예금주", 
			memo : "메모", 
			state : 상태" // 0: 대기 상태 (신청 내역), 1: 승인 상태 (승인 내역), 2: 취소 상태 (취소 내역)
		}
	]
}
※※※※※※※※※※ 참고사항 ※※※※※※※※※※
1. 화면 테이블에서 '상태'컬럼에 [승인] [거절] 표현은 state값에 따라 표현하시면 됩니다.
if (state === 0) {
	[승인] [거절] 표시
} else if (state === 1) {
	환급완료 표시
} else {
	취소완료 표시
}
※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※




[포인트 환급 상태 변경(승인 및 거절) 요청]
URL : /management/point/change
TYPE : POST
Parameter : 
{
	uniqueId : "글 번호", 
	state : "상태값" // 0: 초기화, 1: 승인, 2: 취소
}

응답 : 
{
	errorCode : "에러 코드", // 1: 대상 미선택, 2: 대상이 존재하지 않음, 3: 처리 중 문제 발생, 4: 승인 처리 완료, 5: 반려 처리 완료, 6: 상태 변경 초기화 (승인 / 반려 → 신청 상태로 되돌리기)
	msg : "처리 결과 메시지"
}




[포인트 환급 메모 작성 요청]
URL : /management/point/memo
TYPE : POST 
Parameter : 
{
	uniqueId : "글 번호", 
	memo : "메모내용"
}

응답 : 
{
	errorCode : "에러 코드", // 0: 메모 반영 완료, 1: 대상 미선택, 2: 대상이 존재하지 않음, 3: 처리 중 문제 발생
	msg : "처리 결과 메시지"
}
※※※※※※※※※※ 참고사항 ※※※※※※※※※※
1. 메모는 수정, 삭제 기능은 없습니다.
하나의 API로 모든 처리를 하도록 했습니다.
삭제를 원하는 경우 그냥 빈 값 { memo : "" } 를 던져주세요.
그럼 빈 값으로 반영합니다.
※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※





[P2P 거래기록 전체보기]
URL : /management/p2p
TYPE : GET 

응답 : 
p2pList : {
	[
		{
			no : "순서", 
			uniqueId : "거래고유번호", 
			viewDateTime : "신청일시", 
			toTrademark : "보내는 사람", 
			type : "거래 타입", // 0: 포인트 to (스폰 or 락스폰), 1: (스폰 or 락스폰) to 포인트
			point : "포인트 수량", 
			coin : "스폰 수량", 
			lockCoin : "락스폰 수량", 
			fromTrademark : "받는 사람", 
			state : "단계", // 0: 1단계 거래, 1: 2단계 거래, 3: (2단계 거래 중 한 쪽에서만 거절한) 분쟁 상태, 14: (2단계 거래 중 양 쪽 모두 거절한)분쟁 상태
			toYesNo : "보내는 사람 거래 상태", // 0: 대기, 1: 승낙, 2: 거절
			fromYesNo : "받는 사람 거래 상태", // 0: 대기, 1: 승낙, 2: 거절
		}
	]
}
※※※※※※※※※※ 참고사항 ※※※※※※※※※※
1. "거래고유번호"는 `# + ${uniqueId}`와 같이 문자열 더하기로 표현해주세요.

2. "보내는 품목 / 수량"과 "받는 품목 / 수량" 은 type과 point, coin, lockCoin으로 판단하여 표현해야합니다.

3. "단계"는 1:1 거래에 총 1단계 거래와 2단계 거래, 분쟁 상태가 존재합니다.
1단계 또는 2단계는 그대로 표현하되, "분쟁 상태를 표현할 것인지 판단이 필요"할 것 같습니다. 
(HTML 템플릿에서는 단계에 대해서 2단계만 표현되고 있어 분쟁 상태는 어떻게 처리하는지 확인을 할 수 없습니다.)

4. "승인한 사람"은 toYesNo, fromYesNo로 판단하여 toTrademark 또는 fromTrademark를 표현해야합니다.
그러나 보내는 사람, 받는 사람 모두 승인 처리를 할 수 있으므로 승인한 사람이라는 컬럼의 표현을 변경해야하지 않을까 생각됩니다.

5. "상태"는 state의 값이 3 또는 14일 때 표현하면 됩니다.
※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※




[P2P 거래기록 분쟁상태 목록 보기]
URL : /management/p2p/conflict
TYPE : GET 

응답 : 
p2pConflictList : {
	[
		{
			no : "순서", 
			uniqueId : "거래고유번호", 
			viewDateTime : "신청일시", 
			toTrademark : "보내는 사람", 
			type : "거래 타입", // 0: 포인트 to (스폰 or 락스폰), 1: (스폰 or 락스폰) to 포인트
			point : "포인트 수량", 
			coin : "스폰 수량", 
			lockCoin : "락스폰 수량", 
			fromTrademark : "받는 사람", 
			state : "단계", // 0: 1단계 거래, 1: 2단계 거래, 3: (2단계 거래 중 한 쪽에서만 거절한) 분쟁 상태, 14: (2단계 거래 중 양 쪽 모두 거절한)분쟁 상태
			toYesNo : "보내는 사람 거래 상태", // 0: 대기, 1: 승낙, 2: 거절
			fromYesNo : "받는 사람 거래 상태", // 0: 대기, 1: 승낙, 2: 거절
		}
	]
}




[P2P 분쟁 해결 처리]
URL : /management/p2p/conflict/resolution
TYPE : POST 
Parameter : 
{
	uniqueId : "분쟁 대상 글 번호"
}

응답 : 
{
	msg : "처리 결과 메시지"
}



[관리자용 - 사용자 패스워드 찾기]
URL : /management/find/password
TYPE : POST
Parameter : 
{
	id : "스마트 아이디"
	또는
	phone : "휴대폰 번호"
}

응답 : 
{
	errorCode : "에러코드",  // 0: 메일 발송 성공 1: 파라미터 누락, 2: 미들웨어 서버 응답없음, 3: 없는 사용자 정보, 4: 잘못된 요청, 5: 예기치 못한 오류
	msg : "처리 결과 메시지"
}
※※※※※※※※※※ 참고사항 ※※※※※※※※※※
1. 파라미터는 id 또는 phone 둘 중 하나만 보내주시면 됩니다.
ex ) 
// 스마트 아이디
const sendParameter = { id : "월드스폰" }

// 휴대폰 번호
const sendParameter = { phone : "01012345678" }
※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※



[광고공급자 목록 조회]
URL : /management/ad
TYPE : GET

응답 : 
adList : {
	[
		{
			no : "글 번호", 
			companyName : "회사명", 
			siteAddress : "광고 사이트 URL", 
			partName : "광고 삽입 위치", 
			note : "비고"
		}
	]
}



[광고공급자 단일 조회 요청] - 수정 창 이동 시 
URL : /management/ad/read
TYPE : POST 
Parameter : 
{
	no : "글 번호"
}

응답 : 
ad : {
	no : "글 번호",
	companyName : "회사명", 
	siteAddress : "광고 사이트 URL", 
	loginId : "로그인 아이디", 
	partName : "광고 삽입 위치", 
	note : "비고"
}
※※※※※※※※※※ 참고사항 ※※※※※※※※※※
1. 존재하지 않는 게시글 번호로 요청할 경우 빈 객체만 전달됩니다.
ex) 
ad : {}
※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※



[광고공급자 비밀번호 확인하기 요청]
URL : /management/ad/find/account
TYPE : POST 
Parameter : 
{
	no : "글 번호"
}

응답 : 
{
	errorCode : "에러코드", // 0: 메일 발송 성공, 1: 대상 선택 필요, 2: 존재하지 않는 대상
	msg : "처리 결과 메시지"
}




[광고공급자 정보 추가 요청]
URL : /management/ad/add
TYPE : POST 
Parameter : 
{
	companyName : "회사명", 
	siteAddress : "광고회사 URL", 
	loginId : "로그인 아이디", 
	loginPw : "로그인 패스워드", 
	partName : "앱 내 광고 삽입 위치", 
	note : "비고"
}

응답 : 
{
	errorCode : "에러코드", // 0: 등록 성공, 1: 정보 누락, 2: 처리 중 서버 문제 발생, 3: 예기치 못한 에러
	msg : "처리 결과 메시지"
}




[광고공급자 정보 수정 요청]
URL : /management/ad/modify
TYPE : POST 
Parameter : 
{
	no : "글 번호",
	companyName : "회사명", 
	siteAddress : "광고회사 URL", 
	loginId : "로그인 아이디", 
	loginPw : "로그인 패스워드", 
	partName : "앱 내 광고 삽입 위치", 
	note : "비고"
}

응답 : 
{
	errorCode : "에러코드", // 0: 수정 성공, 1: 정보 누락, 2: 존재하지 않는 대상, 3: 이미 삭제된 대상
	msg : "처리 결과 메시지"
}




[광고공급자 정보 삭제 요청]
URL : /management/ad/delete
TYPE : POST 
Parameter : 
{
	no : "글 번호"
}

응답 : 
{
	errorCode : "에러코드", // 0: 삭제 성공, 1: 정보 누락, 2: 존재하지 않는 대상, 3: 이미 삭제된 대상
	msg : "처리 결과 메시지"
}





[서버 관리 목록 요청]
URL : /management/server
TYPE : GET 
응답 : 
serverList : {
	[
		{
			no : "글 번호",	
			ip : "아이피", 
			port : "포트", 
			location : "위치", 
			loginId : "아이디", 
			note : "비고", 
			payment : "결재일"
		}
	]
}




[서버 관리 단일 조회 요청] - 수정 창 이동 시 
URL : /management/server/read
TYPE : POST
Parameter : 
{
	no : "글 번호"
}

응답 : 
server : {
	no : "글 번호", 
	ip : "아이피", 
	port : "포트", 
	location : "위치", 
	loginId : "아이디", 
	note : "비고", 
	payment : "결재일"
}



[서버 관리 정보 추가 요청]
URL : /management/server/add
TYPE : POST 
Parameter : 
{
	ip : "아이피", 
	port : "포트", 
	location : "위치", 
	loginId : "아이디", 
	note : "비고", 
	payment : "결재일"
}

응답 : 
{
	errorCode : "에러 코드", // 0: 추가 성공, 1: 입력 정보 누락, 2: 처리 중 문제 발생
	msg : "처리 결과 메시지"
}





[서버 관리 정보 수정 요청]
URL : /management/server/modify
TYPE : POST 
Parameter : 
{
	no : "글 번호", 
	ip : "아이피", 
	port : "포트", 
	location : "위치", 
	loginId : "아이디", 
	note : "비고", 
	payment : "결재일"
}

응답 : 
{
	errorCode : "에러 코드", // 0: 수정 성공, 1: 입력 정보 누락, 2: 존재하지 않는 대상
	msg : "처리 결과 메시지"
}




[서버 관리 정보 삭제 요청]
URL : /management/server/delete
TYPE : POST 
Parameter : 
{
	no : "글 번호"
}

응답 : 
{
	errorCode : "에러 코드", // 0: 삭제 성공, 1: 입력 정보 누락, 2: 존재하지 않는 대상
	msg : "처리 결과 메시지"
}





